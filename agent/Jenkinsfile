pipeline {
    agent any

    parameters {
        string(name: 'PARAM_STRING', defaultValue: 'input_param', description: 'This is a string parameter')
        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
    }
    
    triggers{
        cron('*/59 * * * *')
    }

    stages {
        stage('Checkout') {
            when {
                expression {
                    params.CHECKOUT == true
                }
            }
            steps {
                checkout([$class: 'GitSCM',
                       branches: [[name: '*/main']],
                       userRemoteConfigs: [[url: 'https://github.com/jaintpharsha/applications.git',
                       credentialsId: 'github']]])
            }
        }

        stage('Build') {
            when {
                expression {
                    params.BUILD == true
                }
            }
            steps {
                sh '''
                    sleep 5
                '''
            }
        }

        stage('TEST MULTIPLE') {
            parallel {
                stage('Test1') {
                    when {
                        expression {
                            params.TEST == true
                        }
                    }
                    steps {
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                            sh '''
                                sleep 10
                                exit 1
                            '''
                        }
                    }
                }

                stage('Test2') {
                    when {
                        expression {
                            params.TEST == true
                        }
                    }
                    steps {
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                            sh '''
                                sleep 10
                                exit 1
                            '''
                        }
                    }
                }
            }
        }
    }
}
